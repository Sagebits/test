<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- THIS FILE IS AUTOGENERATED BY THE db-config-builder module of ISAAC.   -->
	<modelVersion>4.0.0</modelVersion>

	<groupId>sh.isaac.terminology.converted</groupId>
	<artifactId>cvx-ibdf</artifactId>
	<version>2017-08-24-loader-4.48-SNAPSHOT</version>

	<packaging>pom</packaging>

	<name>Current Vaccines Administered Artifact Converter</name>

	<properties>
		<sourceData.version>2017-08-24</sourceData.version>
		<loader.version>4.48-SNAPSHOT</loader.version>
		
	</properties>

	<scm>
		<url>https://github.com/Sagebits/test.git</url>
		<tag>sh.isaac.terminology.converted/cvx-ibdf/2017-08-24-loader-4.48-SNAPSHOT-2</tag>
	</scm>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>
				Contributions from 2013-2017 where performed either by US government
				employees, or under US Veterans Health Administration contracts.

				US Veterans Health Administration contributions by government employees
				are work of the U.S. Government and are not subject to copyright
				protection in the United States. Portions contributed by government
				employees are USGovWork (17USC §105). Not subject to copyright.

				Contribution by contractors to the US Veterans Health Administration
				during this period are contractually contributed under the
				Apache License, Version 2.0.

				See: https://www.usa.gov/government-works

				Contributions prior to 2013:

				Copyright © International Health Terminology Standards Development Organisation.

				Content packaged by SOLOR projects are subject to licenses specific to the content packaged.
			</comments>
		</license>

	</licenses>

	<organization>
		<name>Organizations participating in ISAAC, ISAAC's KOMET, and SOLOR development include the
				US Veterans Health Administration, OSHERA, and the Health Services Platform Consortium.
		</name>
	</organization>
	
	<developers>
		<developer>
			<properties>
				<info>For a listing of developers, clone the project and execute 'git shortlog -sn'</info>
			</properties>
		</developer>
	</developers>
	
	<issueManagement>
		<system>Jira</system>
		<url>https://issues.osehra.org/projects/ISAAC/summary</url>
	</issueManagement>

	<dependencies>
		<dependency>
			<groupId>sh.isaac.misc</groupId>
			<artifactId>importers</artifactId>
			<version>${loader.version}</version>
			<scope>compile</scope>
			<optional>true</optional>  <!-- Not needed at runtime -->
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Get source files from archiva -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>fetch-src-cvx-src-data</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>sh.isaac.terminology.source</groupId>
									<artifactId>cvx-src-data</artifactId>
									<version>2017-08-24</version>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/generated-resources/src</outputDirectory>
						</configuration>
					</execution>


				</executions>
			</plugin>
			<plugin>
				<!-- metadata we want in the output package -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>write-pom-properties</id>
						<phase>validate</phase>
						<configuration>
							<target>
								<echoproperties destfile="${project.build.directory}/pom.properties" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>profile-</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>sh.isaac.misc</groupId>
						<artifactId>importers</artifactId>
						<version>4.48-SNAPSHOT</version>
						<dependencies>
							<dependency>
								<groupId>sh.isaac.core</groupId>
								<artifactId>log-config</artifactId>
								<version>4.48-SNAPSHOT</version>
								<scope>compile</scope>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>convert-CVX-to-ibdf-</id>
								<goals>
									<goal>convert-CVX-to-ibdf</goal>  
								</goals>
								<configuration>
									<converterOutputArtifactClassifier></converterOutputArtifactClassifier>
									<inputFileLocation>${project.build.directory}/generated-resources/src/</inputFileLocation>

								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>attach-result-</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/assembly-.xml</descriptor>
									</descriptors>
									<attach>false</attach>
									<encoding>UTF-8</encoding>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9.1</version>
						<executions>
							<execution>
								<id>attach-artifact-</id>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<type>ibdf.zip</type>
											<!-- Note that the assembly plugin doesn't use the same classifier - we hack the classifier it returns to be a mis
												mash of classifier and part of type.  So there is always a classifier on the produced zip file, even if no classifier
												was specified by the user.  During artifact attachment, this classifier/type mess is corrected. -->
											<file>${project.build.directory}/${project.build.finalName}-.ibdf.zip</file>
											<classifier></classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
